########################################################
#    Sage code samples (Nov. 2009)
#    from chapter 3 of the CrypTool script
########################################################

print "CHAP 03: ============================================"
print "CHAP 03: ============================================"
print "CHAP 03: ============================================"

# =========================================================================
# SAMPLE 01: Verify the primality of integers generated by a quadratic function
# ==========

def quadratic_prime_formula(start, end, verbose=True):
	print "N -- N^2 - 9*N + 61"
	P = 0 # the number of primes between start and end
	for n in xrange(start, end + 1):
		X = n^2 - 9*n + 61
		if is_prime(X):
			P += 1
			if verbose:
				print str(n) + " -- " + str(X) + " is prime"
		else:
			if verbose:
				print str(n) + " -- " + str(X) + " is NOT prime"
	print "Number of primes: " + str(P)
	print "Percentage of primes: " + str(float((P * 100) / (end - start + 1)))


# Compute the values of f(n) = n^2 - 9n + 61 for n = 0, ..., 50
#  and verify the primality of the generated integers
quadratic_prime_formula(0, 50)

