Release	1.00.1
22.10.99:PW	multipad.cpp:
			On WindowCloseAll modified to first ask if saving is desired
			or if the windows should be closed unsaved.

			automatic.cpp, DialogKeyCaesar.cpp:
			Dilog to enable manual key entry for Caesar analysis added

			automatic.cpp:
			remove repetative keys for vigenere, ADD and XOR analysis

			szenarien.rtf:
			Korrektur des Szenario Vigenere von Histogram auf Autokorrelation

19.11.99:JL hill.cpp, hill.h (und entsprechende Dialogklassen), sq_mat.cpp, sq_mat.h:
			- Funktion zum Erzeugen einer zufälligen (invertierbaren) Matrix erstellt
			  Knopf in Hill Eingabe für zufälligen Schlüssel hinzugefügt
			- Funktionen zum Invertieren von Matrizen für größere Matrizen beschleunigt
			  (Adjunkten Verfahren für kleinen Matrizen, Gauss-Jordan Verfahren für große)
			- Angriff auf Hill Verfahren beschleunigt. Der Schlüssel wird jetzt immer 
			  in linearer Zeit in der Länge der Eingabe gefunden, sofern er existiert.
			Die beiden letzten Punkte funktionieren nur für den Fall MODUL=26 !			  

24.11.99:PW	TextOptions.cpp:
			Umstellung der Optionen auf die Unterstützung unterschiedlicher Alphabete
			PlotDoc.cpp:
			Umstellung auf die Nutzung des definierten Alphabetes
			crypt.cpp:
			Umstellung der Chiffren Caesar und Vigenere auf unterschiedliche Alphabete
			Umstellen des ASCII-Histrograms auf unterschiedliche Alphabete
			Umstellen der ASCII-Entropie auf unterschiedliche Alphabete
			Umstellen der Autokorrelation auf unterschiedliche Alphabete
			Umstellen der Caesar-Analyse auf unterschiedliche Alphabete
			verschiedene Dialoge:
			Umstellen auf der mit Caesar und Vigenere assoziierten Diologe auf unterschiedliche Alphabete

26.11.99:JL hill.cpp, hill.h (und entsprechende Dialogklassen), multipad.cpp, multipad.h:
			Schlüssel bis zur Dimension 10 x 10 erlauben. Es wurden neue Dialogklassen 
			erstellt und die Möglichkeit, von 5 x 5 Schlüsseleingabe zu 10 x 10 zu 
			wechseln und zurück.


29.11.99:PW	fileutil.h und fileutil.cpp und Aufrufe von (Force)Reformat:
			Umstellung auf die alternative Verwendung des Standardalphabetes (A-Z) und des
			Customalphabetes. (Reformat( ..., TRUE) für Standardalphabet, Reformat( ..., FALSE) 
			für Customalphabet))
			Anpassen des englischen Dialogfelds
			fileutil.h:
			Fortführen der Dokumentation für einzelne Funktionen
			Doku:
			Update der Texte für Textoptionen

01.12.99:PW	Erweitern der Textoptionen (Dialogfeld) auf intuitivere Einstellungen

03.12.99:JL hill.cpp, hill.h (und entsprechende Dialogklassen), HillAusgabe(Gross):
			Sprung zwischen Maske fuer 5 x 5 und 10 x 10 Schluessel implementiert.
			Ausgabe des Schluessels beim Angriff angepasst (HillAusgabe(Gross)).

08.12.99:PW	crypt.cpp:
			Einführen der gleitenden Entropie

10.12.99:JL hill.cpp, hill.h:
			Fehler behoben, so dass auch das erste Zeichen in der Liste der erlaubten Zeichen 
			in die Masken eingefuegt werden kann.
			hilleingabe(gross).cpp, hillschluesselausgabe(gross).cpp, crypt.cpp, automatic.cpp:
			Anpassungen, so dass generell die ueber die Maske Textoptionen eingegebenen Zeichen
			fuer das Hill-Verfahren genutzt werden
			hill.cpp, hill.h:
			Angriff fuer das Hill Verfahren so geaendert, dass der Modul allgemein sein kann. 
			Ist aber noch nicht ausgetestet !!!

22.12.99:PW	Lange Dateien werden nun ebenfalls angezeigt (ggf. abgeschnitten). Die Größe gilt nur
			für Win NT. Es ist noch keine Erkennung für Windows 95 mit den entsprechende
			Größenbeschränkungen vorgenommen.
			Histogramme werden nun in % angezeigt

29.12.99:JL	hill.cpp, hill.h: 
			Das Hill Verfahren samt Analyse funktioniert jetzt wieder.
			Ausnahme: Funktion invert() aus Klasse CSquareMatrixModN findet manchmal die Inverse nicht,
			obwohl sie existiert. -> 30.12.99

30.12.99:JL	sq_mat.cpp, sq_mat.h:
			Die Inverse einer Matrix wird fuer allgemeinen Modul immer gefunden. (-> 29.12.99)

12.01.00:PW	hexview.cpp:
			Teile der Anpassung für die Selektion von Hex-Daten.

18.01.00:JL	sq_mat.cpp, sq_mat.h:
			Falls neu ein Zeichen gegeben, existiert keine invertierbare Matrix, daher hat 
			Funktion zufaellige_invertierbare_matrix jetzt einen Rueckgabewert, der 
			in CrypTool ausgewertet wird (es wird eine Fehlermeldung ausgegeben !).
			hill.cpp, hill.h:
			Das Auffuellen von Bloecken darf nicht mehr mit 'X' geschehen, sondern mit einem 
			erlaubten Zeichen. Es wird das ASCII-maessig kleinste Zeichen benutzt.
			Dialogfenster:
			Einige Dialogfenster wurden in der Höhe angepasst, so dass sie mit der Auflöung 
			800 x 600 (Notebooks !) noch komplett auf den Bildschirm passen.	Jetzt haben die 
			Dialoge IDD_DIALOG6 und IDD_SCHLUESSEL_EINGABE_HILL_GROSS die maximale Höhe.
			Ein neuer Dialog darf nicht höher als diese beiden sein !!!
			Hill Schlüsseleingabe-Klassen:
			Falls Kleinbuchstaben als Großbuchstaben interpretiert werden (Textoptionen),
			so wird in den Schlüssel-Eingabefenstern für Hill jeder Kleinbuchstabe in den
			entsprechenden Großbuchstaben umgewandelt. Bei der Kopierfunktion von Schlüsseln
			über die Zwischenablage	können jetzt die Schlüssel bis 5 x 5 aus der großen 10 x 10 
			Eingabemaske in die kleine 5 x 5 Eingabemaske kopiert werden.
			Hill Verfahren:
			Falls Kleinbuchstaben als Großbuchstaben interpretiert werden (Textoptionen),
			mussten an verschiedenen Stellen die Kleinbuchstaben durch die entsprechenden 
			Großbuchstaben ersetzt werden. 

24,26.1.00:PW:	Fix in asymmetric.c der verhinderte, dass Signaturen überprüft werden können,
				die binäre 0 enthalten oder auf 0x20 enden. Vorbereitungen zum asynchronen
				laden der Secude, Doku für gleitende Entropie und Textoptionen
				Vorbereiten CryptDoc auf ladbare Secude

28.01.00:JL crypt.cpp
			Bei Hill Verfahren mussten Fuellzeichen an das Ende der Datei geschrieben werden,
			damit Funktion reformat geht. Diese Zeichen wurden nach Aufruf der Funktion
			reformat wieder entfernt.
			viele Dateien:
			Neue Klasse CAppDocument erzeugt, die von CDocument abgeleitet ist und 
			drei zusaetzliche Membervariablen enthaelt:
			- CString csSchluessel;
			- int iSchluesselTyp; // (SCHLUESSEL_LINEAR, SCHLUESSEL_QUADRATISCH(->Hill)) 
			- hWnd* hWndVaterFenster; // Window Handle des Vaterfensters
			Dann alle CDocument (außer in CAppDocument und CCryptDocTemplate) durch 
			CAppDocument ersetzt.
			Nach ein paar casts ließ es sich wieder übersetzen und funktionierte auch.
			Neue Klasse CAppEditView erzeugt, die von CEditView abgeleitet ist und 
			bei der Nachricht WM_KILLFOCUS die Window Handle des aktiven Fenster in 
			einer globalen Variablen hWndAktivesFenster speichert.

03.02.00:PW	asymmetric.cpp, secude.cpp, multipad.cpp, EClib
			Umstellung auf dynamisches Laden der Secude Bibliothek. Beim Hochfahren der Applikation
			die Bibliothek gesucht und geöffnet. Sind sie und ein entsprechendes Ticket vorhanden,
			so werden die Zeiger auf die benötigten Funktionen und Daten gesetzt. Es kann dann über
			theApp.SecudeLib.XXX auf die Funktionen zugegriffen werden. Bei Daten muß beachtet werden,
			daß es sich um einen Zeiger handelt. In der EC-Lib wurde eine globale Struktur eingeführt,
			die die Funktionszeiger enthält. Diese werden beim Starten der Applikation gesetzt.
			Über die Variable theApp.SecudeStatu wird angezeigt, ob die Bib geladen werden konnte.
			Die Funktionen OnUpdateNeedSecude und OnUpdateNeedSecudeTicket (CCryptDoc)fragen den Status
			ab und erlauben dann den Zugriff auf den entsprechenden Menupunkt (ist in alle
			asymmetrischen und symmetrischen Verschlüsselungen und Hashfunktionen eingebracht)

04.02.00:JL HillSchluesselAusgabe(Gross).h / .cpp
			Ausgabe des Schluessels als String, zeilenweise durch Leerzeichen getrennt
			multipad.cpp:
			OpenDocumentFileNoMRU umgeschrieben: Die Variablen csSchluessel, iSchluesselTyp
			und hWndVaterFenster wurden mit Werten gefuellt.
			viele Dateien:
			Bei Aufruf von OpenDocumentFileNoMRU den Schluessel mit uebergeben, sofern moeglich.
			Funktion zum Anzeigen des Schlüssels und Sprung zum Vaterfenster erstellt.

11.02.00:JL Ressourcen:
			Deutsche und englische Menüs erstellt für Funktionen "Schlüssel anzeigen" und 
			"Sprung zum Vaterfenster".
			Deutsche und Englische Kontextmenüs für "normale Fenster" und Plot-Fenster erstellt
			und entsprechenden Nachrichtenbehandlungsroutine erstellt.
			Menue und Symbolleiste:
			Falls eine Aktion verfügbar ist, ist der Befehl im Menue und das entsprechenden Icon 
			in der Symbolleiste normal, sonst sind sie grau hinterlegt.
			multipad.h, multipad.cpp, automatic.cpp, crypt.cpp:
			Funktion ThreadOpenDocumentFileNoMRU geaendert, so dass Schluessel und Typ des 
			Schluessels	mit uebergeben werden kann, um diese dann an OpenDocumentFileNoMRU 
			weiterreichen zu koennen. Bei Aufruf von ThreadOpenDocumentFileNoMRU den Schluessel 
			mit uebergeben, sofern moeglich.
			Menue:
			Dummy Eintraege fuer die AES Kandidaten gemacht, um die IDs fuer die Hilfe-Datei zu haben.
			Hilfe-Dateien:
			Neue leere Themen gemacht, so dass sich die hilfe fehlerfrei uebersetzen laesst.

9,10,16,17.2.00: PW:	HexDoc, HexView, ASCDoc, FixedView
			Anpassen auf eine Größenänderung des Fensters. Die Daten werden daher nicht mehr wie bisher
			beim Öffnen des Dokumentes in die Präsentationsform gebracht, sondern im View selbst. Dieser
			kann dann das Format anpassen, wenn das Fenster sich ändert.
			PlotView:
			Der Zeichnungscode wurde angepasst, um zu erreichen, daß Diagramme wesentlich schneller
			angezeigt werden können. Dies ändert nichts an der weiterhin gegebenen
			Speicherintensivität des Plots!
			Secude.cpp, asymmetric.cpp:
			jede Menge Speicherfehler beseitigt.

18.02.00:JL Hilfedateien:
			Überarbeitung und Szenarien
			multipad.cpp
			Im Fenster Über CrypTool kam früher bei Doppelklick ein Fenster mit dem 
			Namen der Autoren. Dies ging nicht mehr. Wurde korrigiert.
			secude.cpp:
			Der Hexdialog (Dialog zur Schlüsseleingabe für IDEA, DES, ...) 
			konnte abgebrochen werden (Escape oder Abbrechen-Knopf), aber die 
			Ver- oder Entschlüsselung wurde dennoch durchgeführt. Dies wurde 
			durch Abfragen des Returnwertes von DoModal in der Funktion Display 
			behoben.			

21.02.00:BF > Die elliptische Kurven Libraries EcBibV1.lib (release Version) und EcBibV1D.lib (debug Version)
              hatten noch Fehler. Heute habe ich diese beiden Dateien durch korrigierte Versionen 
			  EcBibV2.lib (release Version) und EcBibV2D.lib (debug Version) ersetzt.
			  Im Verzeichnis "wichmann/analyse/LibEc/sources" bzw.
			  "wichmann/analyse/LibEc/include" liegen die dazugehoerigen aktuellen Dateien.
			> Die öffentlichen/geheimen Schlüsselpaare der RSA und DSA Sign.-/Verschlüsselungs-Verfahren
			  können zur Zeit nicht gelöscht werden. Ich überlege wie das Löschen von solchen Schlüsseln
			  am elegantesten (mit möglich wenig Aufwand) realisiert werden kann. (Ein Löschen aus der
			  CA-Datenbank von Secude ist meines Wissens nach nicht möglich).
			  Das Löschen von ellipt. Kurven Schlüsseln geht nur dann "sauber" von statten, wenn
			  die Schlüssel aus dem Program "CrypTool" heraus gelöscht werden. Das manuelle Löschen der
			  zu einem Schlüssel korrespondierenden Datei im Verzeichnis "CrypTool\PSE\." führt zur Zeit
			  noch zu einem Problem: CrypTool enthält in der Verwaltungsdatei "CTEcKeys.toc" (CrypTool
			  Elliptic Curves Keys table of contents) weiterhin den Schlüsselbezeichner und dieser taucht
			  weiterhin in den entsprechenden Auswahllisten auf. Das ist nicht schön - daher ist diese
			  Vorgehensweise zu ändern.
			> Ich werde im folgenden haupsächlich an folgenden Dateien Änderungen vornehmen
			  (natürlich auch an manchen Resourcen)
				  asymmetric.cpp/h
				  DlgAvailableEcKeys.cpp/h
				  DlgShowEcKeys.cpp/h
				  DlgShowPrivEcKeys.cpp/h
				  DlgShowPubEcKeys.cpp/h
				  DlgSign.cpp/h
				  DlgSignVerif.cpp/h
				  KeyFileHandling.cpp/h (hieß früher EcKeyFileHandling.cpp/h)
				  KeyGenDlg.cpp/h
				  ReadIniFile.h

22.02.00:BF > Begonnen das Löschen von allen asymmetrischen Schlüsselbezeichnern zu realisieren
			  (lediglich die Zertifikate in der Secude CA-Datenbank der Rsa/Dsa Schlüssel können
			  nicht gelöscht werden). D.h. die gelöschten Schlüssel werden nicht mehr in den
			  entsprechenden Auswahllisten angezeigt.

23/24.02.00:B.F > Das Konzept für asymmetrische Schlüsselverwaltung komplett überarbeitet.
				  Es können jetzt nicht nur - wie bisher - ellipt. Kurven Schlüssel gelöscht
				  werden, sondern das Löschen von RSA/DSA Schlüsseldatein ist auch realisiert.
				  Es werden nur diejenigen Dateien im CrypTool Unterzeichnis "./PSE/" zur
				  Laufzeit berücksichtigt. Die Datei "CTEcKeys.toc" (CrypTool Elliptic Curves Keys
				  table of contents) gibt es nicht mehr. Es gibt überhaupt keine
				  Schlüsselbezeichner-Verwaltungsdatei mehr.
				> Die Rückgabewerte von den meisten (allen?) meiner Funktions/Methoden Aufrufe werden
				  nun zwecks Fehlerbehandlung ausgewertet und entsprechend reagiert (z.B. PIN falsch oder
				  Datei xy kann nich geöffnet werden).
				> einige kleinere Speicherfreigabefehler behoben.
25.02.00:BF > Bei der Überprüfung von Signaturen einen unregelmässig auftretenden Fehler behoben. Die
			  entsprechenden Funktion Verify() in asymmetric.cpp überarbearbeitet. Der Fehler kam dadurch
			  zustande, dass die Länge der eigentlichen Signatur-Octets bei DSA/RSA Signaturen manchmal
			  nicht korrekt ermittelt werden konnte (Signaturlänge variiert bei RSA mit der Schlüssellänge).
			  Daher habe ich die Funktion Sign() in asymmetric.cpp ebenfalls modifiziert, so das diese 
			  jetzt die Länge der Signatur in Octets ausgibt.
			> Einen neuen Menüpunkt erzeugt: "Schlüssel", in diesem befinden sich die Untermenüs für
			  die Schlüsselverwaltung der asymmetrische Krypto-Verfahren. Im einzelnen sind dies:
			  "Schlüssel erzeugen", "Schlüssel anzeigen (und Löschen)", "Zertifikat erstellen"

29.02.00:BF > Zertifikat anzeigen ist jetzt unter dem Menüpunkt Schlüssel->Schlüsselanzeigen.
              Die Dateien ShowCert.cpp/h sind aus dem Projekt gelöscht, da Sie nicht meht benötigt werden,
			  ebenso die Res. IDD_DIALOG_LISTBOX (deutsche und englische Version). Jetzt ist der
			  Code zum anzeigen des Zertifikats in der Datei "DlgAvailableEcKeys.cpp".

15.3.00:PW	Vertigstellen des Brute-Force- Angriffe mit automatischer Analyse der Entropie.
			Anpassen des HexViewers auf Win95

24.03.00:JL Klasse CDlgShowCertificate, Ressource IDD_SHOW_CERTIFICATE:
			Im Dialog IDD_SHOW_CERTIFICATE waren die beiden Knöpfe im Font Courier, weil das gesamte 
			Fenster diesen Font hatte. Es wurde umgestellt, dass das Fentser den normalen Sans Serif
			Font hat undnur der Ausgabeteil in Courier erscheint.
			Font hat undnur der Ausgabeteil in Courier erscheint.
			Font hat undnur der Ausgabeteil in Courier erscheint.
